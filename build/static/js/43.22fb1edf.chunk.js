(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{2037:function(e,n,t){"use strict";t.r(n);var a=t(18),s=t(12),l=t(13),i=t(15),r=t(14),o=t(16),p=t(6),c=t(293),u=t(0),g=t.n(u),m=t(598),d=t.n(m),h=t(2533),b=t(59),f=t(541),v=t.n(f),I=t(403),P=t.n(I),y=t(122),x=t.n(y),S=t(386),B=t.n(S),w=t(548),A=t.n(w),E=[{label:"Afghanistan"},{label:"Aland Islands"},{label:"Albania"},{label:"Algeria"},{label:"American Samoa"},{label:"Andorra"},{label:"Angola"},{label:"Anguilla"},{label:"Antarctica"},{label:"Antigua and Barbuda"},{label:"Argentina"},{label:"Armenia"},{label:"Aruba"},{label:"Australia"},{label:"Austria"},{label:"Azerbaijan"},{label:"Bahamas"},{label:"Bahrain"},{label:"Bangladesh"},{label:"Barbados"},{label:"Belarus"},{label:"Belgium"},{label:"Belize"},{label:"Benin"},{label:"Bermuda"},{label:"Bhutan"},{label:"Bolivia, Plurinational State of"},{label:"Bonaire, Sint Eustatius and Saba"},{label:"Bosnia and Herzegovina"},{label:"Botswana"},{label:"Bouvet Island"},{label:"Brazil"},{label:"British Indian Ocean Territory"},{label:"Brunei Darussalam"}];function C(e){var n=e.InputProps,t=e.classes,a=e.ref,s=Object(c.a)(e,["InputProps","classes","ref"]);return g.a.createElement(v.a,Object.assign({InputProps:Object(p.a)({inputRef:a,classes:{root:t.inputRoot,input:t.inputInput}},n)},s))}function N(e){var n=e.suggestion,t=e.index,a=e.itemProps,s=e.highlightedIndex===t,l=(e.selectedItem||"").indexOf(n.label)>-1;return g.a.createElement(B.a,Object.assign({},a,{key:n.label,selected:s,component:"div",style:{fontWeight:l?500:400}}),n.label)}function O(e){var n=d()(e.trim()).toLowerCase(),t=n.length,a=0;return 0===t?[]:E.filter(function(e){var s=a<5&&e.label.slice(0,t).toLowerCase()===n;return s&&(a+=1),s})}var j,R=function(e){function n(){var e,t;Object(s.a)(this,n);for(var l=arguments.length,o=new Array(l),p=0;p<l;p++)o[p]=arguments[p];return(t=Object(i.a)(this,(e=Object(r.a)(n)).call.apply(e,[this].concat(o)))).state={inputValue:"",selectedItem:[]},t.handleKeyDown=function(e){var n=t.state,a=n.inputValue,s=n.selectedItem;s.length&&!a.length&&"Backspace"===e.key&&t.setState({selectedItem:s.slice(0,s.length-1)})},t.handleInputChange=function(e){t.setState({inputValue:e.target.value})},t.handleChange=function(e){var n=t.state.selectedItem;-1===n.indexOf(e)&&(n=[].concat(Object(a.a)(n),[e])),t.setState({inputValue:"",selectedItem:n})},t.handleDelete=function(e){return function(){t.setState(function(n){var t=Object(a.a)(n.selectedItem);return t.splice(t.indexOf(e),1),{selectedItem:t}})}},t}return Object(o.a)(n,e),Object(l.a)(n,[{key:"render",value:function(){var e=this,n=this.props.classes,t=this.state,a=t.inputValue,s=t.selectedItem;return g.a.createElement(h.a,{id:"downshift-multiple",inputValue:a,onChange:this.handleChange,selectedItem:s},function(t){var a=t.getInputProps,l=t.getItemProps,i=t.isOpen,r=t.inputValue,o=t.selectedItem,p=t.highlightedIndex;return g.a.createElement("div",{className:n.container},C({fullWidth:!0,classes:n,InputProps:a({startAdornment:s.map(function(t){return g.a.createElement(A.a,{key:t,tabIndex:-1,label:t,className:n.chip,onDelete:e.handleDelete(t)})}),onChange:e.handleInputChange,onKeyDown:e.handleKeyDown,placeholder:"Select multiple countries"}),label:"Label"}),i?g.a.createElement(x.a,{className:n.paper,square:!0},O(r).map(function(e,n){return N({suggestion:e,index:n,itemProps:l({item:e.label}),highlightedIndex:p,selectedItem:o})})):null)})}}]),n}(g.a.Component);n.default=Object(b.withStyles)(function(e){return{root:{flexGrow:1,height:250},container:{flexGrow:1,position:"relative"},paper:{position:"absolute",zIndex:1,marginTop:e.spacing.unit,left:0,right:0},chip:{margin:"".concat(e.spacing.unit/2,"px ").concat(e.spacing.unit/4,"px")},inputRoot:{flexWrap:"wrap"},inputInput:{width:"auto",flexGrow:1},divider:{height:2*e.spacing.unit}}})(function(e){var n=e.classes;return g.a.createElement("div",{className:n.root},g.a.createElement(h.a,{id:"downshift-simple"},function(e){var t=e.getInputProps,a=e.getItemProps,s=e.getMenuProps,l=e.highlightedIndex,i=e.inputValue,r=e.isOpen,o=e.selectedItem;return g.a.createElement("div",{className:n.container},C({fullWidth:!0,classes:n,InputProps:t({placeholder:"Search a country (start with a)"})}),g.a.createElement("div",s(),r?g.a.createElement(x.a,{className:n.paper,square:!0},O(i).map(function(e,n){return N({suggestion:e,index:n,itemProps:a({item:e.label}),highlightedIndex:l,selectedItem:o})})):null))}),g.a.createElement("div",{className:n.divider}),g.a.createElement(R,{classes:n}),g.a.createElement("div",{className:n.divider}),g.a.createElement(h.a,{id:"downshift-popper"},function(e){var t=e.getInputProps,a=e.getItemProps,s=e.getMenuProps,l=e.highlightedIndex,i=e.inputValue,r=e.isOpen,o=e.selectedItem;return g.a.createElement("div",{className:n.container},C({fullWidth:!0,classes:n,InputProps:t({placeholder:"With Popper"}),ref:function(e){j=e}}),g.a.createElement(P.a,{open:r,anchorEl:j},g.a.createElement("div",r?s({},{suppressRefError:!0}):{},g.a.createElement(x.a,{square:!0,style:{marginTop:8,width:j?j.clientWidth:null}},O(i).map(function(e,n){return N({suggestion:e,index:n,itemProps:a({item:e.label}),highlightedIndex:l,selectedItem:o})})))))}))})},2038:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInput(inputProps) {\n  const { InputProps, classes, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...InputProps,\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400,\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n};\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nclass DownshiftMultiple extends React.Component {\n  state = {\n    inputValue: '',\n    selectedItem: [],\n  };\n\n  handleKeyDown = event => {\n    const { inputValue, selectedItem } = this.state;\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n      this.setState({\n        selectedItem: selectedItem.slice(0, selectedItem.length - 1),\n      });\n    }\n  };\n\n  handleInputChange = event => {\n    this.setState({ inputValue: event.target.value });\n  };\n\n  handleChange = item => {\n    let { selectedItem } = this.state;\n\n    if (selectedItem.indexOf(item) === -1) {\n      selectedItem = [...selectedItem, item];\n    }\n\n    this.setState({\n      inputValue: '',\n      selectedItem,\n    });\n  };\n\n  handleDelete = item => () => {\n    this.setState(state => {\n      const selectedItem = [...state.selectedItem];\n      selectedItem.splice(selectedItem.indexOf(item), 1);\n      return { selectedItem };\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { inputValue, selectedItem } = this.state;\n\n    return (\n      <Downshift\n        id=\"downshift-multiple\"\n        inputValue={inputValue}\n        onChange={this.handleChange}\n        selectedItem={selectedItem}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          inputValue: inputValue2,\n          selectedItem: selectedItem2,\n          highlightedIndex,\n        }) => (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              InputProps: getInputProps({\n                startAdornment: selectedItem.map(item => (\n                  <Chip\n                    key={item}\n                    tabIndex={-1}\n                    label={item}\n                    className={classes.chip}\n                    onDelete={this.handleDelete(item)}\n                  />\n                )),\n                onChange: this.handleInputChange,\n                onKeyDown: this.handleKeyDown,\n                placeholder: 'Select multiple countries',\n              }),\n              label: 'Label',\n            })}\n            {isOpen ? (\n              <Paper className={classes.paper} square>\n                {getSuggestions(inputValue2).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem: selectedItem2,\n                  }),\n                )}\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative',\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n  },\n  inputRoot: {\n    flexWrap: 'wrap',\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1,\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nlet popperNode;\n\nfunction IntegrationDownshift(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <Downshift id=\"downshift-simple\">\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              InputProps: getInputProps({\n                placeholder: 'Search a country (start with a)',\n              }),\n            })}\n            <div {...getMenuProps()}>\n              {isOpen ? (\n                <Paper className={classes.paper} square>\n                  {getSuggestions(inputValue).map((suggestion, index) =>\n                    renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({ item: suggestion.label }),\n                      highlightedIndex,\n                      selectedItem,\n                    }),\n                  )}\n                </Paper>\n              ) : null}\n            </div>\n          </div>\n        )}\n      </Downshift>\n      <div className={classes.divider} />\n      <DownshiftMultiple classes={classes} />\n      <div className={classes.divider} />\n      <Downshift id=\"downshift-popper\">\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n        }) => (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              InputProps: getInputProps({\n                placeholder: 'With Popper',\n              }),\n              ref: node => {\n                popperNode = node;\n              },\n            })}\n            <Popper open={isOpen} anchorEl={popperNode}>\n              <div {...(isOpen ? getMenuProps({}, { suppressRefError: true }) : {})}>\n                <Paper\n                  square\n                  style={{ marginTop: 8, width: popperNode ? popperNode.clientWidth : null }}\n                >\n                  {getSuggestions(inputValue).map((suggestion, index) =>\n                    renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({ item: suggestion.label }),\n                      highlightedIndex,\n                      selectedItem,\n                    }),\n                  )}\n                </Paper>\n              </div>\n            </Popper>\n          </div>\n        )}\n      </Downshift>\n    </div>\n  );\n}\n\nIntegrationDownshift.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationDownshift);\n"},2039:function(e,n,t){"use strict";t.r(n);var a=t(12),s=t(13),l=t(15),i=t(14),r=t(16),o=t(36),p=t(6),c=t(293),u=t(0),g=t.n(u),m=t(5),d=t.n(m),h=t(747),b=t(59),f=t(112),v=t.n(f),I=t(398),P=t.n(I),y=t(541),x=t.n(y),S=t(122),B=t.n(S),w=t(548),A=t.n(w),E=t(386),C=t.n(E),N=t(2040),O=t.n(N),j=t(80),R=[{label:"Afghanistan"},{label:"Aland Islands"},{label:"Albania"},{label:"Algeria"},{label:"American Samoa"},{label:"Andorra"},{label:"Angola"},{label:"Anguilla"},{label:"Antarctica"},{label:"Antigua and Barbuda"},{label:"Argentina"},{label:"Armenia"},{label:"Aruba"},{label:"Australia"},{label:"Austria"},{label:"Azerbaijan"},{label:"Bahamas"},{label:"Bahrain"},{label:"Bangladesh"},{label:"Barbados"},{label:"Belarus"},{label:"Belgium"},{label:"Belize"},{label:"Benin"},{label:"Bermuda"},{label:"Bhutan"},{label:"Bolivia, Plurinational State of"},{label:"Bonaire, Sint Eustatius and Saba"},{label:"Bosnia and Herzegovina"},{label:"Botswana"},{label:"Bouvet Island"},{label:"Brazil"},{label:"British Indian Ocean Territory"},{label:"Brunei Darussalam"}].map(function(e){return{value:e.label,label:e.label}});function T(e){var n=e.inputRef,t=Object(c.a)(e,["inputRef"]);return g.a.createElement("div",Object.assign({ref:n},t))}var V={Control:function(e){return g.a.createElement(x.a,Object.assign({fullWidth:!0,InputProps:{inputComponent:T,inputProps:Object(p.a)({className:e.selectProps.classes.input,inputRef:e.innerRef,children:e.children},e.innerProps)}},e.selectProps.textFieldProps))},Menu:function(e){return g.a.createElement(B.a,Object.assign({square:!0,className:e.selectProps.classes.paper},e.innerProps),e.children)},MultiValue:function(e){return g.a.createElement(A.a,{tabIndex:-1,label:e.children,className:d()(e.selectProps.classes.chip,Object(o.a)({},e.selectProps.classes.chipFocused,e.isFocused)),onDelete:e.removeProps.onClick,deleteIcon:g.a.createElement(O.a,e.removeProps)})},NoOptionsMessage:function(e){return g.a.createElement(v.a,Object.assign({color:"textSecondary",className:e.selectProps.classes.noOptionsMessage},e.innerProps),e.children)},Option:function(e){return g.a.createElement(C.a,Object.assign({buttonRef:e.innerRef,selected:e.isFocused,component:"div",style:{fontWeight:e.isSelected?500:400}},e.innerProps),e.children)},Placeholder:function(e){return g.a.createElement(v.a,Object.assign({color:"textSecondary",className:e.selectProps.classes.placeholder},e.innerProps),e.children)},SingleValue:function(e){return g.a.createElement(v.a,Object.assign({className:e.selectProps.classes.singleValue},e.innerProps),e.children)},ValueContainer:function(e){return g.a.createElement("div",{className:e.selectProps.classes.valueContainer},e.children)}},M=function(e){function n(){var e,t;Object(a.a)(this,n);for(var s=arguments.length,r=new Array(s),p=0;p<s;p++)r[p]=arguments[p];return(t=Object(l.a)(this,(e=Object(i.a)(n)).call.apply(e,[this].concat(r)))).state={single:null,multi:null},t.handleChange=function(e){return function(n){t.setState(Object(o.a)({},e,n))}},t}return Object(r.a)(n,e),Object(s.a)(n,[{key:"render",value:function(){var e=this.props,n=e.classes,t=e.theme,a={input:function(e){return Object(p.a)({},e,{color:t.palette.text.primary,"& input":{font:"inherit"}})}};return g.a.createElement("div",{className:n.root},g.a.createElement(P.a,null,g.a.createElement(h.a,{classes:n,styles:a,options:R,components:V,value:this.state.single,onChange:this.handleChange("single"),placeholder:"Search a country (start with a)",isClearable:!0}),g.a.createElement("div",{className:n.divider}),g.a.createElement(h.a,{classes:n,styles:a,textFieldProps:{label:"Label",InputLabelProps:{shrink:!0}},options:R,components:V,value:this.state.multi,onChange:this.handleChange("multi"),placeholder:"Select multiple countries",isMulti:!0})))}}]),n}(g.a.Component);n.default=Object(b.withStyles)(function(e){return{root:{flexGrow:1,height:250},input:{display:"flex",padding:0},valueContainer:{display:"flex",flexWrap:"wrap",flex:1,alignItems:"center",overflow:"hidden"},chip:{margin:"".concat(e.spacing.unit/2,"px ").concat(e.spacing.unit/4,"px")},chipFocused:{backgroundColor:Object(j.emphasize)("light"===e.palette.type?e.palette.grey[300]:e.palette.grey[700],.08)},noOptionsMessage:{padding:"".concat(e.spacing.unit,"px ").concat(2*e.spacing.unit,"px")},singleValue:{fontSize:16},placeholder:{position:"absolute",left:2,fontSize:16},paper:{position:"absolute",zIndex:1,marginTop:e.spacing.unit,left:0,right:0},divider:{height:2*e.spacing.unit}}},{withTheme:!0})(M)},2041:function(e,n){e.exports="/* eslint-disable react/prop-types, react/jsx-handler-names */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Select from 'react-select';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n].map(suggestion => ({\n  value: suggestion.label,\n  label: suggestion.label,\n}));\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250,\n  },\n  input: {\n    display: 'flex',\n    padding: 0,\n  },\n  valueContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flex: 1,\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  chip: {\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n      0.08,\n    ),\n  },\n  noOptionsMessage: {\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  singleValue: {\n    fontSize: 16,\n  },\n  placeholder: {\n    position: 'absolute',\n    left: 2,\n    fontSize: 16,\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.noOptionsMessage}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputComponent,\n        inputProps: {\n          className: props.selectProps.classes.input,\n          inputRef: props.innerRef,\n          children: props.children,\n          ...props.innerProps,\n        },\n      }}\n      {...props.selectProps.textFieldProps}\n    />\n  );\n}\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      buttonRef={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nfunction Placeholder(props) {\n  return (\n    <Typography\n      color=\"textSecondary\"\n      className={props.selectProps.classes.placeholder}\n      {...props.innerProps}\n    >\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nfunction ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props) {\n  return (\n    <Chip\n      tabIndex={-1}\n      label={props.children}\n      className={classNames(props.selectProps.classes.chip, {\n        [props.selectProps.classes.chipFocused]: props.isFocused,\n      })}\n      onDelete={props.removeProps.onClick}\n      deleteIcon={<CancelIcon {...props.removeProps} />}\n    />\n  );\n}\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  MultiValue,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nclass IntegrationReactSelect extends React.Component {\n  state = {\n    single: null,\n    multi: null,\n  };\n\n  handleChange = name => value => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const selectStyles = {\n      input: base => ({\n        ...base,\n        color: theme.palette.text.primary,\n        '& input': {\n          font: 'inherit',\n        },\n      }),\n    };\n\n    return (\n      <div className={classes.root}>\n        <NoSsr>\n          <Select\n            classes={classes}\n            styles={selectStyles}\n            options={suggestions}\n            components={components}\n            value={this.state.single}\n            onChange={this.handleChange('single')}\n            placeholder=\"Search a country (start with a)\"\n            isClearable\n          />\n          <div className={classes.divider} />\n          <Select\n            classes={classes}\n            styles={selectStyles}\n            textFieldProps={{\n              label: 'Label',\n              InputLabelProps: {\n                shrink: true,\n              },\n            }}\n            options={suggestions}\n            components={components}\n            value={this.state.multi}\n            onChange={this.handleChange('multi')}\n            placeholder=\"Select multiple countries\"\n            isMulti\n          />\n        </NoSsr>\n      </div>\n    );\n  }\n}\n\nIntegrationReactSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(IntegrationReactSelect);\n"},2042:function(e,n,t){"use strict";t.r(n);var a=t(36),s=t(12),l=t(13),i=t(15),r=t(14),o=t(16),p=t(293),c=t(0),u=t.n(c),g=t(598),m=t.n(g),d=t(533),h=t.n(d),b=t(532),f=t.n(b),v=t(740),I=t.n(v),P=t(541),y=t.n(P),x=t(122),S=t.n(x),B=t(386),w=t.n(B),A=t(403),E=t.n(A),C=t(59),N=[{label:"Afghanistan"},{label:"Aland Islands"},{label:"Albania"},{label:"Algeria"},{label:"American Samoa"},{label:"Andorra"},{label:"Angola"},{label:"Anguilla"},{label:"Antarctica"},{label:"Antigua and Barbuda"},{label:"Argentina"},{label:"Armenia"},{label:"Aruba"},{label:"Australia"},{label:"Austria"},{label:"Azerbaijan"},{label:"Bahamas"},{label:"Bahrain"},{label:"Bangladesh"},{label:"Barbados"},{label:"Belarus"},{label:"Belgium"},{label:"Belize"},{label:"Benin"},{label:"Bermuda"},{label:"Bhutan"},{label:"Bolivia, Plurinational State of"},{label:"Bonaire, Sint Eustatius and Saba"},{label:"Bosnia and Herzegovina"},{label:"Botswana"},{label:"Bouvet Island"},{label:"Brazil"},{label:"British Indian Ocean Territory"},{label:"Brunei Darussalam"}];function O(e){var n=e.classes,t=e.inputRef,a=void 0===t?function(){}:t,s=e.ref,l=Object(p.a)(e,["classes","inputRef","ref"]);return u.a.createElement(y.a,Object.assign({fullWidth:!0,InputProps:{inputRef:function(e){s(e),a(e)},classes:{input:n.input}}},l))}function j(e,n){var t=n.query,a=n.isHighlighted,s=f()(e.label,t),l=I()(e.label,s);return u.a.createElement(w.a,{selected:a,component:"div"},u.a.createElement("div",null,l.map(function(e,n){return e.highlight?u.a.createElement("span",{key:String(n),style:{fontWeight:500}},e.text):u.a.createElement("strong",{key:String(n),style:{fontWeight:300}},e.text)})))}function R(e){var n=m()(e.trim()).toLowerCase(),t=n.length,a=0;return 0===t?[]:N.filter(function(e){var s=a<5&&e.label.slice(0,t).toLowerCase()===n;return s&&(a+=1),s})}function T(e){return e.label}var V=function(e){function n(){var e,t;Object(s.a)(this,n);for(var l=arguments.length,o=new Array(l),p=0;p<l;p++)o[p]=arguments[p];return(t=Object(i.a)(this,(e=Object(r.a)(n)).call.apply(e,[this].concat(o)))).state={single:"",popper:"",suggestions:[]},t.handleSuggestionsFetchRequested=function(e){var n=e.value;t.setState({suggestions:R(n)})},t.handleSuggestionsClearRequested=function(){t.setState({suggestions:[]})},t.handleChange=function(e){return function(n,s){var l=s.newValue;t.setState(Object(a.a)({},e,l))}},t}return Object(o.a)(n,e),Object(l.a)(n,[{key:"render",value:function(){var e=this,n=this.props.classes,t={renderInputComponent:O,suggestions:this.state.suggestions,onSuggestionsFetchRequested:this.handleSuggestionsFetchRequested,onSuggestionsClearRequested:this.handleSuggestionsClearRequested,getSuggestionValue:T,renderSuggestion:j};return u.a.createElement("div",{className:n.root},u.a.createElement(h.a,Object.assign({},t,{inputProps:{classes:n,placeholder:"Search a country (start with a)",value:this.state.single,onChange:this.handleChange("single")},theme:{container:n.container,suggestionsContainerOpen:n.suggestionsContainerOpen,suggestionsList:n.suggestionsList,suggestion:n.suggestion},renderSuggestionsContainer:function(e){return u.a.createElement(S.a,Object.assign({},e.containerProps,{square:!0}),e.children)}})),u.a.createElement("div",{className:n.divider}),u.a.createElement(h.a,Object.assign({},t,{inputProps:{classes:n,label:"Label",placeholder:"With Popper",value:this.state.popper,onChange:this.handleChange("popper"),inputRef:function(n){e.popperNode=n},InputLabelProps:{shrink:!0}},theme:{suggestionsList:n.suggestionsList,suggestion:n.suggestion},renderSuggestionsContainer:function(n){return u.a.createElement(E.a,{anchorEl:e.popperNode,open:Boolean(n.children)},u.a.createElement(S.a,Object.assign({square:!0},n.containerProps,{style:{width:e.popperNode?e.popperNode.clientWidth:null}}),n.children))}})))}}]),n}(u.a.Component);n.default=Object(C.withStyles)(function(e){return{root:{height:250,flexGrow:1},container:{position:"relative"},suggestionsContainerOpen:{position:"absolute",zIndex:1,marginTop:e.spacing.unit,left:0,right:0},suggestion:{display:"block"},suggestionsList:{margin:0,padding:0,listStyleType:"none"},divider:{height:2*e.spacing.unit}}})(V)},2043:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst suggestions = [\n  { label: 'Afghanistan' },\n  { label: 'Aland Islands' },\n  { label: 'Albania' },\n  { label: 'Algeria' },\n  { label: 'American Samoa' },\n  { label: 'Andorra' },\n  { label: 'Angola' },\n  { label: 'Anguilla' },\n  { label: 'Antarctica' },\n  { label: 'Antigua and Barbuda' },\n  { label: 'Argentina' },\n  { label: 'Armenia' },\n  { label: 'Aruba' },\n  { label: 'Australia' },\n  { label: 'Austria' },\n  { label: 'Azerbaijan' },\n  { label: 'Bahamas' },\n  { label: 'Bahrain' },\n  { label: 'Bangladesh' },\n  { label: 'Barbados' },\n  { label: 'Belarus' },\n  { label: 'Belgium' },\n  { label: 'Belize' },\n  { label: 'Benin' },\n  { label: 'Bermuda' },\n  { label: 'Bhutan' },\n  { label: 'Bolivia, Plurinational State of' },\n  { label: 'Bonaire, Sint Eustatius and Saba' },\n  { label: 'Bosnia and Herzegovina' },\n  { label: 'Botswana' },\n  { label: 'Bouvet Island' },\n  { label: 'Brazil' },\n  { label: 'British Indian Ocean Territory' },\n  { label: 'Brunei Darussalam' },\n];\n\nfunction renderInputComponent(inputProps) {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input,\n        },\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        {parts.map((part, index) =>\n          part.highlight ? (\n            <span key={String(index)} style={{ fontWeight: 500 }}>\n              {part.text}\n            </span>\n          ) : (\n            <strong key={String(index)} style={{ fontWeight: 300 }}>\n              {part.text}\n            </strong>\n          ),\n        )}\n      </div>\n    </MenuItem>\n  );\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst styles = theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1,\n  },\n  container: {\n    position: 'relative',\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing.unit,\n    left: 0,\n    right: 0,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  divider: {\n    height: theme.spacing.unit * 2,\n  },\n});\n\nclass IntegrationAutosuggest extends React.Component {\n  state = {\n    single: '',\n    popper: '',\n    suggestions: [],\n  };\n\n  handleSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  handleSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  handleChange = name => (event, { newValue }) => {\n    this.setState({\n      [name]: newValue,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const autosuggestProps = {\n      renderInputComponent,\n      suggestions: this.state.suggestions,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      getSuggestionValue,\n      renderSuggestion,\n    };\n\n    return (\n      <div className={classes.root}>\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            placeholder: 'Search a country (start with a)',\n            value: this.state.single,\n            onChange: this.handleChange('single'),\n          }}\n          theme={{\n            container: classes.container,\n            suggestionsContainerOpen: classes.suggestionsContainerOpen,\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Paper {...options.containerProps} square>\n              {options.children}\n            </Paper>\n          )}\n        />\n        <div className={classes.divider} />\n        <Autosuggest\n          {...autosuggestProps}\n          inputProps={{\n            classes,\n            label: 'Label',\n            placeholder: 'With Popper',\n            value: this.state.popper,\n            onChange: this.handleChange('popper'),\n            inputRef: node => {\n              this.popperNode = node;\n            },\n            InputLabelProps: {\n              shrink: true,\n            },\n          }}\n          theme={{\n            suggestionsList: classes.suggestionsList,\n            suggestion: classes.suggestion,\n          }}\n          renderSuggestionsContainer={options => (\n            <Popper anchorEl={this.popperNode} open={Boolean(options.children)}>\n              <Paper\n                square\n                {...options.containerProps}\n                style={{ width: this.popperNode ? this.popperNode.clientWidth : null }}\n              >\n                {options.children}\n              </Paper>\n            </Popper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n"},2585:function(e,n,t){"use strict";t.r(n);var a=t(0),s=t.n(a),l=t(4),i=t(1),r=t(59);n.default=Object(r.withStyles)(function(e){return{layoutRoot:{"& .description":{marginBottom:16}}}},{withTheme:!0})(function(e){var n=e.classes;return s.a.createElement(l.s,{classes:{root:n.layoutRoot},header:s.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},s.a.createElement("div",{className:"flex flex-col"},s.a.createElement("div",{className:"flex items-center mb-16"},s.a.createElement(i.G,{className:"text-18",color:"action"},"home"),s.a.createElement(i.G,{className:"text-16",color:"action"},"chevron_right"),s.a.createElement(i.vb,{color:"textSecondary"},"Components"),s.a.createElement(i.G,{className:"text-16",color:"action"},"chevron_right"),s.a.createElement(i.vb,{color:"textSecondary"},"Material UI Elements")),s.a.createElement(i.vb,{variant:"h6"},"Autocomplete")),s.a.createElement(i.c,{className:"normal-case",variant:"contained",component:"a",href:"https://material-ui-next.com/demos/autocomplete",target:"_blank"},s.a.createElement(i.G,{className:"mr-4"},"link"),"Reference")),content:s.a.createElement("div",{className:"p-24 max-w-2xl mx-auto"},s.a.createElement(i.vb,{className:"text-44 mt-32 mb-8",component:"h1"},"Autocomplete"),s.a.createElement(i.vb,{className:"description"},"The autocomplete is a normal text input enhanced by a panel of suggested options."),s.a.createElement(i.vb,{className:"mb-16",component:"div"},"Material-UI doesn't provide any high-level API for solving this problem. We encourage people relying on the solutions the React community has built."),s.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"downshift"),s.a.createElement(i.vb,{className:"mb-16",component:"div"},s.a.createElement("img",{src:"https://img.shields.io/github/stars/paypal/downshift.svg?style=social&label=Stars",alt:"stars"}),s.a.createElement("img",{src:"https://img.shields.io/npm/dm/downshift.svg",alt:"npm downloads"})),s.a.createElement(i.vb,{className:"mb-16",component:"div"},"In the following example, we demonstrate how to use ",s.a.createElement("a",{href:"https://github.com/paypal/downshift"},"downshift"),"."),s.a.createElement(i.vb,{className:"mb-16",component:"div"},s.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(2037).default,raw:t(2038)})),s.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"react-select"),s.a.createElement(i.vb,{className:"mb-16",component:"div"},s.a.createElement("img",{src:"https://img.shields.io/github/stars/JedWatson/react-select.svg?style=social&label=Stars",alt:"stars"}),s.a.createElement("img",{src:"https://img.shields.io/npm/dm/react-select.svg",alt:"npm downloads"})),s.a.createElement(i.vb,{className:"mb-16",component:"div"},"In the following example, we demonstrate how to use ",s.a.createElement("a",{href:"https://github.com/JedWatson/react-select"},"react-select"),"."),s.a.createElement(i.vb,{className:"mb-16",component:"div"},s.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(2039).default,raw:t(2041)})),s.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"react-autosuggest"),s.a.createElement(i.vb,{className:"mb-16",component:"div"},s.a.createElement("img",{src:"https://img.shields.io/github/stars/moroshko/react-autosuggest.svg?style=social&label=Stars",alt:"stars"}),s.a.createElement("img",{src:"https://img.shields.io/npm/dm/react-autosuggest.svg",alt:"npm downloads"})),s.a.createElement(i.vb,{className:"mb-16",component:"div"},"In the following example, we demonstrate how to use ",s.a.createElement("a",{href:"https://github.com/moroshko/react-autosuggest"},"react-autosuggest"),". It's also using ",s.a.createElement("a",{href:"https://www.npmjs.com/package/autosuggest-highlight"},"autosuggest-highlight")," for the highlighting logic."),s.a.createElement(i.vb,{className:"mb-16",component:"div"},s.a.createElement(l.j,{className:"my-24",iframe:!1,component:t(2042).default,raw:t(2043)})))})})}}]);