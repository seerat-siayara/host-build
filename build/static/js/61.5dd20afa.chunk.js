(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{1855:function(e,n){e.exports="import '@fake-db'\nimport React from 'react';\nimport { createGenerateClassName, jssPreset } from '@material-ui/core';\nimport { FuseAuthorization, FuseLayout, FuseTheme } from '@fuse';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport Provider from 'react-redux/es/components/Provider';\nimport { Router } from 'react-router-dom';\nimport { create } from 'jss';\nimport jssExtend from 'jss-extend';\nimport history from '../history';\nimport { Auth } from './auth';\nimport store from './store';\nimport AppContext from './AppContext';\nimport routes from './fuse-configs/routesConfig';\n\nconst jss = create({\n    ...jssPreset(),\n    plugins: [...jssPreset().plugins, jssExtend()]\n});\n\njss.options.insertionPoint = document.getElementById('jss-insertion-point');\nconst generateClassName = createGenerateClassName();\n\nconst App = () => {\n    return (\n        <AppContext.Provider\n            value={{\n                routes\n            }}\n        >\n            <JssProvider jss={jss} generateClassName={generateClassName}>\n                <Provider store={store}>\n                    <Auth>\n                        <Router history={history}>\n                            <FuseAuthorization>\n                                <FuseTheme>\n                                    <FuseLayout />\n                                </FuseTheme>\n                            </FuseAuthorization>\n                        </Router>\n                    </Auth>\n                </Provider>\n            </JssProvider>\n        </AppContext.Provider>\n    );\n};\n\nexport default App;\n"},2611:function(e,n,t){"use strict";t.r(n);var o=t(0),a=t.n(o),r=t(1),s=t(4);n.default=function(){return a.a.createElement(s.s,{header:a.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},a.a.createElement("div",{className:"flex flex-col"},a.a.createElement("div",{className:"flex items-center mb-16"},a.a.createElement(r.G,{className:"text-18",color:"action"},"home"),a.a.createElement(r.G,{className:"text-16",color:"action"},"chevron_right"),a.a.createElement(r.vb,{color:"textSecondary"},"Components"),a.a.createElement(r.G,{className:"text-16",color:"action"},"chevron_right"),a.a.createElement(r.vb,{color:"textSecondary"},"Fuse Components")),a.a.createElement(r.vb,{variant:"h6"},"FuseAuthorization"))),content:a.a.createElement("div",{className:"p-24 max-w-2xl"},a.a.createElement(r.vb,{className:"mb-16",component:"p"},a.a.createElement("code",null,"FuseAuthorization")," is authorization component of the Fuse React. It allows to restrict routes based on user roles. It should wraps the FuseTheme component."),a.a.createElement(r.vb,{className:"mb-16",component:"p"},a.a.createElement("code",null,"src/app/App.js")),a.a.createElement(s.k,{component:"pre",className:"language-jsx"},t(1855)),a.a.createElement(r.vb,{className:"mt-32 mb-8",variant:"h5"},"Configuration"),a.a.createElement(r.vb,{className:"mb-16",component:"p"},"You can define authorization roles in route config files."),a.a.createElement(s.k,{component:"pre",className:"language-jsx"},"\n                                export const AdminRoleExampleConfig = {\n                                    settings: {\n                                        layout: {\n                                            config: {}\n                                        }\n                                    },\n                                    auth    : authRoles.admin,//['admin']\n                                    routes  : [\n                                        {\n                                            path     : '/auth/admin-role-example',\n                                            component: AdminRoleExample\n                                        }\n                                    ]\n                                };\n                            "),a.a.createElement(r.vb,{className:"mb-16 mt-32",component:"p"},"You can also hide navigation item/group/collapse by adding ",a.a.createElement("b",null,"auth")," property in ",a.a.createElement("code",null,"src/app/fuse-configs/NavigationConfig.js"),"."),a.a.createElement(s.k,{component:"pre",className:"language-js"},"\n                                  {\n                                    'id'   : 'only-admin-navigation-item',\n                                    'title': 'Nav item only for Admin',\n                                    'type' : 'item',\n                                    'auth' : authRoles.admin,\n                                    'url'  : '/auth/admin-role-example',\n                                    'icon' : 'verified_user'\n                                  },\n                            "),a.a.createElement(r.vb,{id:"auth-protected-app",className:"mt-32 mb-8",variant:"h5"},"On routesConfig.js file"),a.a.createElement(r.vb,{className:"mb-16 mt-32",component:"p"},"If you don't want to set auth on every page config;",a.a.createElement("br",null),"You can group the configs and define authorization the ",a.a.createElement("code",null,"src/app/fuse-configs/routesConfig.js")," file,",a.a.createElement("br",null),"With this configuration below makes ",a.a.createElement("b",null,"whole app")," auth protected:"),a.a.createElement(s.k,{component:"pre",className:"language-js"},"\n                                    import React from 'react';\n                                    import {Redirect} from 'react-router-dom';\n                                    import {FuseUtils} from '@fuse/index';\n                                    import {appsConfigs} from 'app/main/apps/appsConfigs';\n                                    import {pagesConfigs} from 'app/main/pages/pagesConfigs';\n                                    import {authRoleExamplesConfigs} from 'app/main/auth/authRoleExamplesConfigs';\n                                    import {UserInterfaceConfig} from 'app/main/user-interface/UserInterfaceConfig';\n                                    import {ComponentsConfig} from 'app/main/components/ComponentsConfig';\n                                    import {DocumentationConfig} from 'app/main/documentation/DocumentationConfig';\n                                    import {LoginConfig} from 'app/main/login/LoginConfig';\n                                    import {RegisterConfig} from 'app/main/register/RegisterConfig';\n                                    import {LogoutConfig} from 'app/main/logout/LogoutConfig';\n                                    import {CallbackConfig} from 'app/main/callback/CallbackConfig';\n                                    import {authRoles} from 'app/auth';\n                                    import _ from 'lodash';\n\n                                    function setAdminAuth(configs)\n                                    {\n                                        return configs.map(config => _.merge({}, config, {auth: authRoles.admin}))\n                                    }\n\n                                    const routeConfigs = [\n                                        ...setAdminAuth([\n                                            ...appsConfigs,\n                                            ...pagesConfigs,\n                                            ...authRoleExamplesConfigs,\n                                            ComponentsConfig,\n                                            UserInterfaceConfig,\n                                            DocumentationConfig,\n                                            LogoutConfig\n                                        ]),\n                                        LoginConfig,\n                                        RegisterConfig,\n                                        CallbackConfig\n                                    ];\n\n                                    const routes = [\n                                        ...FuseUtils.generateRoutesFromConfigs(routeConfigs),\n                                        {\n                                            path     : '/',\n                                            component: () => <Redirect to=\"/apps/dashboards/analytics\"/>\n                                        },\n                                        {\n                                            exact    : true,\n                                            component: () => <Redirect to=\"/pages/errors/error-404\"/>\n                                        }\n                                    ];\n\n                                    export default routes;\n\n\n                            "))})}}}]);