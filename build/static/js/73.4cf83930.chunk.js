(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{2620:function(e,a,n){"use strict";n.r(a);var t=n(0),o=n.n(t),l=n(1),c=n(4),i=n(20),r=n(19),s=n(25);a.default=Object(i.b)(null,function(e){return Object(r.c)({openDialog:s.h,closeDialog:s.b},e)})(function(e){var a=e.openDialog,n=e.closeDialog;return o.a.createElement(c.s,{header:o.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},o.a.createElement("div",{className:"flex flex-col"},o.a.createElement("div",{className:"flex items-center mb-16"},o.a.createElement(l.G,{className:"text-18",color:"action"},"home"),o.a.createElement(l.G,{className:"text-16",color:"action"},"chevron_right"),o.a.createElement(l.vb,{color:"textSecondary"},"Components"),o.a.createElement(l.G,{className:"text-16",color:"action"},"chevron_right"),o.a.createElement(l.vb,{color:"textSecondary"},"Fuse Components")),o.a.createElement(l.vb,{variant:"h6"},"FuseDialog"))),content:o.a.createElement("div",{className:"p-24 max-w-2xl"},o.a.createElement(l.vb,{className:"mb-16",component:"p"},o.a.createElement("code",null,"FuseDialog")," is a simple dialog trigger for easily showing dialog messages via redux action. It should be located in the theme layouts."),o.a.createElement(l.vb,{className:"mt-32 mb-8",variant:"h5"},"Usage"),o.a.createElement(l.vb,{className:"mb-16",component:"p"},"You can show dialog anywhere with dispatching the action openDialog, its using Material-UI's dialog so you can pass the props in the object:"),o.a.createElement(c.k,{component:"pre",className:"language-jsx"},'\n                        <Button\n                            onClick={() => openDialog({\n                                children: (\n                                    <React.Fragment>\n                                        <DialogTitle id="alert-dialog-title">Use Google\'s location service?</DialogTitle>\n                                        <DialogContent>\n                                            <DialogContentText id="alert-dialog-description">\n                                                Let Google help apps determine location. This means sending anonymous location data to\n                                                Google, even when no apps are running.\n                                            </DialogContentText>\n                                        </DialogContent>\n                                        <DialogActions>\n                                            <Button onClick={closeDialog} color="primary">\n                                                Disagree\n                                            </Button>\n                                            <Button onClick={closeDialog} color="primary" autoFocus>\n                                                Agree\n                                            </Button>\n                                        </DialogActions>\n                                    </React.Fragment>\n                                )\n                            })}\n                            variant="contained"\n                            color="secondary"\n                        >\n                        Open Dialog\n                        </Button>\n                            '),o.a.createElement(l.vb,{className:"mt-32 mb-8",variant:"h5"},"Example"),o.a.createElement(l.c,{onClick:function(){return a({children:o.a.createElement(o.a.Fragment,null,o.a.createElement(l.p,{id:"alert-dialog-title"},"Use Google's location service?"),o.a.createElement(l.n,null,o.a.createElement(l.o,{id:"alert-dialog-description"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),o.a.createElement(l.m,null,o.a.createElement(l.c,{onClick:n,color:"primary"},"Disagree"),o.a.createElement(l.c,{onClick:n,color:"primary",autoFocus:!0},"Agree")))})},variant:"contained",color:"secondary"},"Open Dialog"))})})}}]);