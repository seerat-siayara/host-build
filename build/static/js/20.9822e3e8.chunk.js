(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{2442:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(12),r=t(13),i=t(15),s=t(14),o=t(16),m=t(0),c=t.n(m),d=t(5),u=t.n(d),p=t(59),h=t(386),f=t.n(h),b=t(541),g=t.n(b),x=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}],v=function(e){function n(){var e,t;Object(l.a)(this,n);for(var r=arguments.length,o=new Array(r),m=0;m<r;m++)o[m]=arguments[m];return(t=Object(i.a)(this,(e=Object(s.a)(n)).call.apply(e,[this].concat(o)))).state={name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t}return Object(o.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},c.a.createElement(g.a,{id:"standard-name",label:"Name",className:e.textField,value:this.state.name,onChange:this.handleChange("name"),margin:"normal"}),c.a.createElement(g.a,{id:"standard-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal"}),c.a.createElement(g.a,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal"}),c.a.createElement(g.a,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal"}),c.a.createElement(g.a,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal"}),c.a.createElement(g.a,{id:"standard-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal"}),c.a.createElement(g.a,{id:"standard-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0}}),c.a.createElement(g.a,{id:"standard-dense",label:"Dense",className:u()(e.textField,e.dense),margin:"dense"}),c.a.createElement(g.a,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:this.state.multiline,onChange:this.handleChange("multiline"),className:e.textField,margin:"normal"}),c.a.createElement(g.a,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal"}),c.a.createElement(g.a,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal"}),c.a.createElement(g.a,{id:"standard-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal"}),c.a.createElement(g.a,{id:"standard-textarea",label:"With placeholder multiline",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal"}),c.a.createElement(g.a,{id:"standard-number",label:"Number",value:this.state.age,onChange:this.handleChange("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal"}),c.a.createElement(g.a,{id:"standard-search",label:"Search field",type:"search",className:e.textField,margin:"normal"}),c.a.createElement(g.a,{id:"standard-select-currency",select:!0,label:"Select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},x.map(function(e){return c.a.createElement(f.a,{key:e.value,value:e.value},e.label)})),c.a.createElement(g.a,{id:"standard-select-currency-native",select:!0,label:"Native select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},x.map(function(e){return c.a.createElement("option",{key:e.value,value:e.value},e.label)})),c.a.createElement(g.a,{id:"standard-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0}}),c.a.createElement(g.a,{id:"standard-bare",className:e.textField,defaultValue:"Bare",margin:"normal"}))}}]),n}(c.a.Component);n.default=Object(p.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit,width:200},dense:{marginTop:19},menu:{width:200}}})(v)},2443:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nclass TextFields extends React.Component {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="standard-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          required\n          id="standard-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          error\n          id="standard-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          disabled\n          id="standard-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n\n        <TextField\n          id="standard-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n        />\n\n        <TextField\n          id="standard-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-textarea"\n          label="With placeholder multiline"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id="standard-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n        />\n      </form>\n    );\n  }\n}\n\nTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TextFields);\n'},2444:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(12),r=t(13),i=t(15),s=t(14),o=t(16),m=t(0),c=t.n(m),d=t(5),u=t.n(d),p=t(59),h=t(386),f=t.n(h),b=t(541),g=t.n(b),x=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}],v=function(e){function n(){var e,t;Object(l.a)(this,n);for(var r=arguments.length,o=new Array(r),m=0;m<r;m++)o[m]=arguments[m];return(t=Object(i.a)(this,(e=Object(s.a)(n)).call.apply(e,[this].concat(o)))).state={name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t}return Object(o.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},c.a.createElement(g.a,{id:"outlined-name",label:"Name",className:e.textField,value:this.state.name,onChange:this.handleChange("name"),margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-dense",label:"Dense",className:u()(e.textField,e.dense),margin:"dense",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:this.state.multiline,onChange:this.handleChange("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-number",label:"Number",value:this.state.age,onChange:this.handleChange("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"outlined"}),c.a.createElement(g.a,{id:"outlined-select-currency",select:!0,label:"Select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},x.map(function(e){return c.a.createElement(f.a,{key:e.value,value:e.value},e.label)})),c.a.createElement(g.a,{id:"outlined-select-currency-native",select:!0,label:"Native select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},x.map(function(e){return c.a.createElement("option",{key:e.value,value:e.value},e.label)})),c.a.createElement(g.a,{id:"outlined-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"outlined",InputLabelProps:{shrink:!0}}),c.a.createElement(g.a,{id:"outlined-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"outlined"}))}}]),n}(c.a.Component);n.default=Object(p.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit},dense:{marginTop:16},menu:{width:200}}})(v)},2445:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nclass OutlinedTextFields extends React.Component {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="outlined-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          required\n          id="outlined-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          error\n          id="outlined-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          disabled\n          id="outlined-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-email-input"\n          label="Email"\n          className={classes.textField}\n          type="email"\n          name="email"\n          autoComplete="email"\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n          helperText="hello"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="outlined"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="outlined"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          variant="outlined"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id="outlined-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n          variant="outlined"\n        />\n      </form>\n    );\n  }\n}\n\nOutlinedTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OutlinedTextFields);\n'},2446:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(12),r=t(13),i=t(15),s=t(14),o=t(16),m=t(0),c=t.n(m),d=t(5),u=t.n(d),p=t(59),h=t(386),f=t.n(h),b=t(541),g=t.n(b),x=[{value:"USD",label:"$"},{value:"EUR",label:"\u20ac"},{value:"BTC",label:"\u0e3f"},{value:"JPY",label:"\xa5"}],v=function(e){function n(){var e,t;Object(l.a)(this,n);for(var r=arguments.length,o=new Array(r),m=0;m<r;m++)o[m]=arguments[m];return(t=Object(i.a)(this,(e=Object(s.a)(n)).call.apply(e,[this].concat(o)))).state={name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t}return Object(o.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},c.a.createElement(g.a,{id:"filled-name",label:"Name",className:e.textField,value:this.state.name,onChange:this.handleChange("name"),margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"filled"}),c.a.createElement(g.a,{id:"filled-dense",label:"Dense",className:u()(e.textField,e.dense),margin:"dense",variant:"filled"}),c.a.createElement(g.a,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:this.state.multiline,onChange:this.handleChange("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"filled"}),c.a.createElement(g.a,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-number",label:"Number",value:this.state.age,onChange:this.handleChange("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"filled"}),c.a.createElement(g.a,{id:"filled-select-currency",select:!0,label:"Select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},x.map(function(e){return c.a.createElement(f.a,{key:e.value,value:e.value},e.label)})),c.a.createElement(g.a,{id:"filled-select-currency-native",select:!0,label:"Native select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},x.map(function(e){return c.a.createElement("option",{key:e.value,value:e.value},e.label)})),c.a.createElement(g.a,{id:"filled-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"filled",InputLabelProps:{shrink:!0}}),c.a.createElement(g.a,{id:"filled-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"filled"}))}}]),n}(c.a.Component);n.default=Object(p.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit},dense:{marginTop:16},menu:{width:200}}})(v)},2447:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'\u20ac\',\n  },\n  {\n    value: \'BTC\',\n    label: \'\u0e3f\',\n  },\n  {\n    value: \'JPY\',\n    label: \'\xa5\',\n  },\n];\n\nclass FilledTextFields extends React.Component {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="filled-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          required\n          id="filled-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          error\n          id="filled-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          disabled\n          id="filled-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-email-input"\n          label="Email"\n          className={classes.textField}\n          type="email"\n          name="email"\n          autoComplete="email"\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n          helperText="hello"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="filled"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="filled"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          variant="filled"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id="filled-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n          variant="filled"\n        />\n      </form>\n    );\n  }\n}\n\nFilledTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FilledTextFields);\n'},2448:function(e,n,t){"use strict";t.r(n);var a=t(12),l=t(13),r=t(15),i=t(14),s=t(16),o=t(0),m=t.n(o),c=t(43),d=t.n(c),u=t(59),p=t(400),h=t.n(p),f=t(389),b=t.n(f),g=t(393),x=t.n(g),v=t(258),F=t.n(v),y=t(390),N=t.n(y),w=t(402),E=t.n(w),C=function(e){function n(){var e,t;Object(a.a)(this,n);for(var l=arguments.length,s=new Array(l),o=0;o<l;o++)s[o]=arguments[o];return(t=Object(r.a)(this,(e=Object(i.a)(n)).call.apply(e,[this].concat(s)))).state={name:"Composed TextField"},t.handleChange=function(e){t.setState({name:e.target.value})},t}return Object(s.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){this.forceUpdate()}},{key:"render",value:function(){var e=this,n=this.props.classes;return m.a.createElement("div",{className:n.container},m.a.createElement(b.a,{className:n.formControl},m.a.createElement(N.a,{htmlFor:"component-simple"},"Name"),m.a.createElement(F.a,{id:"component-simple",value:this.state.name,onChange:this.handleChange})),m.a.createElement(b.a,{className:n.formControl},m.a.createElement(N.a,{htmlFor:"component-helper"},"Name"),m.a.createElement(F.a,{id:"component-helper",value:this.state.name,onChange:this.handleChange,"aria-describedby":"component-helper-text"}),m.a.createElement(x.a,{id:"component-helper-text"},"Some important helper text")),m.a.createElement(b.a,{className:n.formControl,disabled:!0},m.a.createElement(N.a,{htmlFor:"component-disabled"},"Name"),m.a.createElement(F.a,{id:"component-disabled",value:this.state.name,onChange:this.handleChange}),m.a.createElement(x.a,null,"Disabled")),m.a.createElement(b.a,{className:n.formControl,error:!0},m.a.createElement(N.a,{htmlFor:"component-error"},"Name"),m.a.createElement(F.a,{id:"component-error",value:this.state.name,onChange:this.handleChange,"aria-describedby":"component-error-text"}),m.a.createElement(x.a,{id:"component-error-text"},"Error")),m.a.createElement(b.a,{className:n.formControl,variant:"outlined"},m.a.createElement(N.a,{ref:function(n){e.labelRef=d.a.findDOMNode(n)},htmlFor:"component-outlined"},"Name"),m.a.createElement(E.a,{id:"component-outlined",value:this.state.name,onChange:this.handleChange,labelWidth:this.labelRef?this.labelRef.offsetWidth:0})),m.a.createElement(b.a,{className:n.formControl,variant:"filled"},m.a.createElement(N.a,{htmlFor:"component-filled"},"Name"),m.a.createElement(h.a,{id:"component-filled",value:this.state.name,onChange:this.handleChange})))}}]),n}(m.a.Component);n.default=Object(u.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit}}})(C)},2449:function(e,n){e.exports='import React from \'react\';\nimport ReactDOM from \'react-dom\';\nimport PropTypes from \'prop-types\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport FilledInput from \'@material-ui/core/FilledInput\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport Input from \'@material-ui/core/Input\';\nimport InputLabel from \'@material-ui/core/InputLabel\';\nimport OutlinedInput from \'@material-ui/core/OutlinedInput\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass ComposedTextField extends React.Component {\n  state = {\n    name: \'Composed TextField\',\n  };\n\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor="component-simple">Name</InputLabel>\n          <Input id="component-simple" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor="component-helper">Name</InputLabel>\n          <Input\n            id="component-helper"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby="component-helper-text"\n          />\n\n          <FormHelperText id="component-helper-text">Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor="component-disabled">Name</InputLabel>\n          <Input id="component-disabled" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor="component-error">Name</InputLabel>\n          <Input\n            id="component-error"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby="component-error-text"\n          />\n\n          <FormHelperText id="component-error-text">Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} variant="outlined">\n          <InputLabel\n            ref={ref => {\n              this.labelRef = ReactDOM.findDOMNode(ref);\n            }}\n            htmlFor="component-outlined"\n          >\n            Name\n          </InputLabel>\n          <OutlinedInput\n            id="component-outlined"\n            value={this.state.name}\n            onChange={this.handleChange}\n            labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl} variant="filled">\n          <InputLabel htmlFor="component-filled">Name</InputLabel>\n          <FilledInput id="component-filled" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nComposedTextField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComposedTextField);\n'},2450:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(59),i=t(258),s=t.n(i);n.default=Object(r.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},input:{margin:e.spacing.unit}}})(function(e){var n=e.classes;return l.a.createElement("div",{className:n.container},l.a.createElement(s.a,{defaultValue:"Hello world",className:n.input,inputProps:{"aria-label":"Description"}}),l.a.createElement(s.a,{placeholder:"Placeholder",className:n.input,inputProps:{"aria-label":"Description"}}),l.a.createElement(s.a,{value:"Disabled",className:n.input,disabled:!0,inputProps:{"aria-label":"Description"}}),l.a.createElement(s.a,{defaultValue:"Error",className:n.input,error:!0,inputProps:{"aria-label":"Description"}}))})},2451:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction Inputs(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n    </div>\n  );\n}\n\nInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Inputs);\n"},2452:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(59),i=t(258),s=t.n(i),o=t(210),m=t.n(o),c=t(390),d=t.n(c),u=t(541),p=t.n(u),h=t(389),f=t.n(h),b=t(832),g=t.n(b),x=t(823),v=t.n(x),F=Object(r.createMuiTheme)({palette:{primary:v.a},typography:{useNextVariants:!0}});n.default=Object(r.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},cssLabel:{"&$cssFocused":{color:g.a[500]}},cssFocused:{},cssUnderline:{"&:after":{borderBottomColor:g.a[500]}},cssOutlinedInput:{"&$cssFocused $notchedOutline":{borderColor:g.a[500]}},notchedOutline:{},bootstrapRoot:{"label + &":{marginTop:3*e.spacing.unit}},bootstrapInput:{borderRadius:4,position:"relative",backgroundColor:e.palette.common.white,border:"1px solid #ced4da",fontSize:16,width:"auto",padding:"10px 12px",transition:e.transitions.create(["border-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{borderRadius:4,borderColor:"#80bdff",boxShadow:"0 0 0 0.2rem rgba(0,123,255,.25)"}},bootstrapFormLabel:{fontSize:18}}})(function(e){var n=e.classes;return l.a.createElement("div",{className:n.root},l.a.createElement(f.a,{className:n.margin},l.a.createElement(d.a,{htmlFor:"custom-css-standard-input",classes:{root:n.cssLabel,focused:n.cssFocused}},"Custom CSS"),l.a.createElement(s.a,{id:"custom-css-standard-input",classes:{underline:n.cssUnderline}})),l.a.createElement(p.a,{className:n.margin,InputLabelProps:{classes:{root:n.cssLabel,focused:n.cssFocused}},InputProps:{classes:{root:n.cssOutlinedInput,focused:n.cssFocused,notchedOutline:n.notchedOutline}},label:"Custom CSS",variant:"outlined",id:"custom-css-outlined-input"}),l.a.createElement(r.MuiThemeProvider,{theme:F},l.a.createElement(p.a,{className:n.margin,label:"MuiThemeProvider",id:"mui-theme-provider-standard-input"}),l.a.createElement(p.a,{className:n.margin,label:"MuiThemeProvider",variant:"outlined",id:"mui-theme-provider-outlined-input"})),l.a.createElement(f.a,{className:n.margin},l.a.createElement(d.a,{shrink:!0,htmlFor:"bootstrap-input",className:n.bootstrapFormLabel},"Bootstrap"),l.a.createElement(m.a,{id:"bootstrap-input",defaultValue:"react-bootstrap",classes:{root:n.bootstrapRoot,input:n.bootstrapInput}})),l.a.createElement(m.a,{className:n.margin,defaultValue:"Naked input"}))})},2453:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  cssLabel: {\n    '&$cssFocused': {\n      color: purple[500],\n    },\n  },\n  cssFocused: {},\n  cssUnderline: {\n    '&:after': {\n      borderBottomColor: purple[500],\n    },\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: purple[500],\n    },\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    'label + &': {\n      marginTop: theme.spacing.unit * 3,\n    },\n  },\n  bootstrapInput: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n  bootstrapFormLabel: {\n    fontSize: 18,\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n  typography: { useNextVariants: true },\n});\n\nfunction CustomizedInputs(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.margin}>\n        <InputLabel\n          htmlFor=\"custom-css-standard-input\"\n          classes={{\n            root: classes.cssLabel,\n            focused: classes.cssFocused,\n          }}\n        >\n          Custom CSS\n        </InputLabel>\n        <Input\n          id=\"custom-css-standard-input\"\n          classes={{\n            underline: classes.cssUnderline,\n          }}\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        InputLabelProps={{\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused,\n          },\n        }}\n        InputProps={{\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n          },\n        }}\n        label=\"Custom CSS\"\n        variant=\"outlined\"\n        id=\"custom-css-outlined-input\"\n      />\n\n      <MuiThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label=\"MuiThemeProvider\"\n          id=\"mui-theme-provider-standard-input\"\n        />\n\n        <TextField\n          className={classes.margin}\n          label=\"MuiThemeProvider\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n        />\n      </MuiThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\" className={classes.bootstrapFormLabel}>\n          Bootstrap\n        </InputLabel>\n        <InputBase\n          id=\"bootstrap-input\"\n          defaultValue=\"react-bootstrap\"\n          classes={{\n            root: classes.bootstrapRoot,\n            input: classes.bootstrapInput,\n          }}\n        />\n      </FormControl>\n      <InputBase className={classes.margin} defaultValue=\"Naked input\" />\n    </div>\n  );\n}\n\nCustomizedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedInputs);\n"},2454:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(59),i=t(122),s=t.n(i),o=t(210),m=t.n(o),c=t(540),d=t.n(c),u=t(257),p=t.n(u),h=t(1772),f=t.n(h),b=t(1797),g=t.n(b),x=t(2455),v=t.n(x);n.default=Object(r.withStyles)({root:{padding:"2px 4px",display:"flex",alignItems:"center",width:400},input:{marginLeft:8,flex:1},iconButton:{padding:10},divider:{width:1,height:28,margin:4}})(function(e){var n=e.classes;return l.a.createElement(s.a,{className:n.root,elevation:1},l.a.createElement(p.a,{className:n.iconButton,"aria-label":"Menu"},l.a.createElement(f.a,null)),l.a.createElement(m.a,{className:n.input,placeholder:"Search Google Maps"}),l.a.createElement(p.a,{className:n.iconButton,"aria-label":"Search"},l.a.createElement(g.a,null)),l.a.createElement(d.a,{className:n.divider}),l.a.createElement(p.a,{color:"primary",className:n.iconButton,"aria-label":"Directions"},l.a.createElement(v.a,null)))})},2456:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nfunction CustomizedInputBase(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase className={classes.input} placeholder=\"Search Google Maps\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nCustomizedInputBase.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedInputBase);\n"},2457:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(12),r=t(13),i=t(15),s=t(14),o=t(16),m=t(0),c=t.n(m),d=t(5),u=t.n(d),p=t(59),h=t(257),f=t.n(h),b=t(258),g=t.n(b),x=t(390),v=t.n(x),F=t(564),y=t.n(F),N=t(393),w=t.n(N),E=t(389),C=t.n(E),T=t(541),I=t.n(T),P=t(386),S=t.n(P),R=t(1853),k=t.n(R),A=t(1854),O=t.n(A),V=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],j=function(e){function n(){var e,t;Object(l.a)(this,n);for(var r=arguments.length,o=new Array(r),m=0;m<r;m++)o[m]=arguments[m];return(t=Object(i.a)(this,(e=Object(s.a)(n)).call.apply(e,[this].concat(o)))).state={amount:"",password:"",weight:"",weightRange:"",showPassword:!1},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t.handleClickShowPassword=function(){t.setState(function(e){return{showPassword:!e.showPassword}})},t}return Object(o.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("div",{className:e.root},c.a.createElement(I.a,{label:"With normal TextField",id:"simple-start-adornment",className:u()(e.margin,e.textField),InputProps:{startAdornment:c.a.createElement(y.a,{position:"start"},"Kg")}}),c.a.createElement(I.a,{select:!0,label:"With Select",className:u()(e.margin,e.textField),value:this.state.weightRange,onChange:this.handleChange("weightRange"),InputProps:{startAdornment:c.a.createElement(y.a,{position:"start"},"Kg")}},V.map(function(e){return c.a.createElement(S.a,{key:e.value,value:e.value},e.label)})),c.a.createElement(C.a,{fullWidth:!0,className:e.margin},c.a.createElement(v.a,{htmlFor:"adornment-amount"},"Amount"),c.a.createElement(g.a,{id:"adornment-amount",value:this.state.amount,onChange:this.handleChange("amount"),startAdornment:c.a.createElement(y.a,{position:"start"},"$")})),c.a.createElement(C.a,{className:u()(e.margin,e.withoutLabel,e.textField)},c.a.createElement(g.a,{id:"adornment-weight",value:this.state.weight,onChange:this.handleChange("weight"),"aria-describedby":"weight-helper-text",endAdornment:c.a.createElement(y.a,{position:"end"},"Kg"),inputProps:{"aria-label":"Weight"}}),c.a.createElement(w.a,{id:"weight-helper-text"},"Weight")),c.a.createElement(C.a,{className:u()(e.margin,e.textField)},c.a.createElement(v.a,{htmlFor:"adornment-password"},"Password"),c.a.createElement(g.a,{id:"adornment-password",type:this.state.showPassword?"text":"password",value:this.state.password,onChange:this.handleChange("password"),endAdornment:c.a.createElement(y.a,{position:"end"},c.a.createElement(f.a,{"aria-label":"Toggle password visibility",onClick:this.handleClickShowPassword},this.state.showPassword?c.a.createElement(k.a,null):c.a.createElement(O.a,null)))})))}}]),n}(c.a.Component);n.default=Object(p.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},withoutLabel:{marginTop:3*e.spacing.unit},textField:{flexBasis:200}}})(j)},2458:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  withoutLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass InputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          label=\"With normal TextField\"\n          id=\"simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          select\n          label=\"With Select\"\n          className={classNames(classes.margin, classes.textField)}\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormControl fullWidth className={classes.margin}>\n          <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n          <Input\n            id=\"adornment-amount\"\n            value={this.state.amount}\n            onChange={this.handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl\n          className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n        >\n          <Input\n            id=\"adornment-weight\"\n            value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            aria-describedby=\"weight-helper-text\"\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n            inputProps={{\n              'aria-label': 'Weight',\n            }}\n          />\n\n          <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n        </FormControl>\n        <FormControl className={classNames(classes.margin, classes.textField)}>\n          <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n          <Input\n            id=\"adornment-password\"\n            type={this.state.showPassword ? 'text' : 'password'}\n            value={this.state.password}\n            onChange={this.handleChange('password')}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputAdornments);\n"},2459:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(59),i=t(258),s=t.n(i),o=t(390),m=t.n(o),c=t(564),d=t.n(c),u=t(389),p=t.n(u),h=t(541),f=t.n(h),b=t(820),g=t.n(b),x=t(1805),v=t.n(x);n.default=Object(r.withStyles)(function(e){return{margin:{margin:e.spacing.unit}}})(function(e){var n=e.classes;return l.a.createElement("div",null,l.a.createElement(p.a,{className:n.margin},l.a.createElement(m.a,{htmlFor:"input-with-icon-adornment"},"With a start adornment"),l.a.createElement(s.a,{id:"input-with-icon-adornment",startAdornment:l.a.createElement(d.a,{position:"start"},l.a.createElement(v.a,null))})),l.a.createElement(f.a,{className:n.margin,id:"input-with-icon-textfield",label:"TextField",InputProps:{startAdornment:l.a.createElement(d.a,{position:"start"},l.a.createElement(v.a,null))}}),l.a.createElement("div",{className:n.margin},l.a.createElement(g.a,{container:!0,spacing:8,alignItems:"flex-end"},l.a.createElement(g.a,{item:!0},l.a.createElement(v.a,null)),l.a.createElement(g.a,{item:!0},l.a.createElement(f.a,{id:"input-with-icon-grid",label:"With a grid"})))))})},2460:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction InputWithIcon(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nInputWithIcon.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputWithIcon);\n"},2461:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(12),r=t(13),i=t(15),s=t(14),o=t(16),m=t(0),c=t.n(m),d=t(5),u=t.n(d),p=t(59),h=t(257),f=t.n(h),b=t(564),g=t.n(b),x=t(541),v=t.n(x),F=t(386),y=t.n(F),N=t(1853),w=t.n(N),E=t(1854),C=t.n(E),T=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],I=function(e){function n(){var e,t;Object(l.a)(this,n);for(var r=arguments.length,o=new Array(r),m=0;m<r;m++)o[m]=arguments[m];return(t=Object(i.a)(this,(e=Object(s.a)(n)).call.apply(e,[this].concat(o)))).state={amount:"",password:"",weight:"",weightRange:"",showPassword:!1},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t.handleClickShowPassword=function(){t.setState(function(e){return{showPassword:!e.showPassword}})},t}return Object(o.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("div",{className:e.root},c.a.createElement(v.a,{id:"filled-simple-start-adornment",className:u()(e.margin,e.textField),variant:"filled",label:"With filled TextField",InputProps:{startAdornment:c.a.createElement(g.a,{position:"start"},"Kg")}}),c.a.createElement(v.a,{select:!0,className:u()(e.margin,e.textField),variant:"filled",label:"With Select",value:this.state.weightRange,onChange:this.handleChange("weightRange"),InputProps:{startAdornment:c.a.createElement(g.a,{position:"start"},"Kg")}},T.map(function(e){return c.a.createElement(y.a,{key:e.value,value:e.value},e.label)})),c.a.createElement(v.a,{id:"filled-adornment-amount",className:u()(e.margin,e.textField),variant:"filled",label:"Amount",value:this.state.amount,onChange:this.handleChange("amount"),InputProps:{startAdornment:c.a.createElement(g.a,{position:"start"},"$")}}),c.a.createElement(v.a,{id:"filled-adornment-weight",className:u()(e.margin,e.textField),variant:"filled",label:"Weight",value:this.state.weight,onChange:this.handleChange("weight"),helperText:"Weight",InputProps:{endAdornment:c.a.createElement(g.a,{position:"end"},"Kg")}}),c.a.createElement(v.a,{id:"filled-adornment-password",className:u()(e.margin,e.textField),variant:"filled",type:this.state.showPassword?"text":"password",label:"Password",value:this.state.password,onChange:this.handleChange("password"),InputProps:{endAdornment:c.a.createElement(g.a,{position:"end"},c.a.createElement(f.a,{"aria-label":"Toggle password visibility",onClick:this.handleClickShowPassword},this.state.showPassword?c.a.createElement(C.a,null):c.a.createElement(w.a,null)))}}))}}]),n}(c.a.Component);n.default=Object(p.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},textField:{flexBasis:200}}})(I)},2462:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass FilledInputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"filled-simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"With filled TextField\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          select\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"With Select\"\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"filled-adornment-amount\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"Amount\"\n          value={this.state.amount}\n          onChange={this.handleChange('amount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"filled-adornment-weight\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"Weight\"\n          value={this.state.weight}\n          onChange={this.handleChange('weight')}\n          helperText=\"Weight\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"filled-adornment-password\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          type={this.state.showPassword ? 'text' : 'password'}\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange('password')}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nFilledInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FilledInputAdornments);\n"},2463:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(12),r=t(13),i=t(15),s=t(14),o=t(16),m=t(0),c=t.n(m),d=t(5),u=t.n(d),p=t(59),h=t(257),f=t.n(h),b=t(564),g=t.n(b),x=t(541),v=t.n(x),F=t(386),y=t.n(F),N=t(1853),w=t.n(N),E=t(1854),C=t.n(E),T=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],I=function(e){function n(){var e,t;Object(l.a)(this,n);for(var r=arguments.length,o=new Array(r),m=0;m<r;m++)o[m]=arguments[m];return(t=Object(i.a)(this,(e=Object(s.a)(n)).call.apply(e,[this].concat(o)))).state={amount:"",password:"",weight:"",weightRange:"",showPassword:!1},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t.handleClickShowPassword=function(){t.setState(function(e){return{showPassword:!e.showPassword}})},t}return Object(o.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props.classes;return c.a.createElement("div",{className:e.root},c.a.createElement(v.a,{id:"outlined-simple-start-adornment",className:u()(e.margin,e.textField),variant:"outlined",label:"With outlined TextField",InputProps:{startAdornment:c.a.createElement(g.a,{position:"start"},"Kg")}}),c.a.createElement(v.a,{select:!0,className:u()(e.margin,e.textField),variant:"outlined",label:"With Select",value:this.state.weightRange,onChange:this.handleChange("weightRange"),InputProps:{startAdornment:c.a.createElement(g.a,{position:"start"},"Kg")}},T.map(function(e){return c.a.createElement(y.a,{key:e.value,value:e.value},e.label)})),c.a.createElement(v.a,{id:"outlined-adornment-amount",className:u()(e.margin,e.textField),variant:"outlined",label:"Amount",value:this.state.amount,onChange:this.handleChange("amount"),InputProps:{startAdornment:c.a.createElement(g.a,{position:"start"},"$")}}),c.a.createElement(v.a,{id:"outlined-adornment-weight",className:u()(e.margin,e.textField),variant:"outlined",label:"Weight",value:this.state.weight,onChange:this.handleChange("weight"),helperText:"Weight",InputProps:{endAdornment:c.a.createElement(g.a,{position:"end"},"Kg")}}),c.a.createElement(v.a,{id:"outlined-adornment-password",className:u()(e.margin,e.textField),variant:"outlined",type:this.state.showPassword?"text":"password",label:"Password",value:this.state.password,onChange:this.handleChange("password"),InputProps:{endAdornment:c.a.createElement(g.a,{position:"end"},c.a.createElement(f.a,{"aria-label":"Toggle password visibility",onClick:this.handleClickShowPassword},this.state.showPassword?c.a.createElement(C.a,null):c.a.createElement(w.a,null)))}}))}}]),n}(c.a.Component);n.default=Object(p.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},textField:{flexBasis:200}}})(I)},2464:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass OutlinedInputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"outlined-simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"With outlined TextField\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          select\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"With Select\"\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"outlined-adornment-amount\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Amount\"\n          value={this.state.amount}\n          onChange={this.handleChange('amount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"outlined-adornment-weight\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Weight\"\n          value={this.state.weight}\n          onChange={this.handleChange('weight')}\n          helperText=\"Weight\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"outlined-adornment-password\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          type={this.state.showPassword ? 'text' : 'password'}\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange('password')}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nOutlinedInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OutlinedInputAdornments);\n"},2465:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(59),i=t(541),s=t.n(i);n.default=Object(r.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit,width:200}}})(function(e){var n=e.classes;return l.a.createElement("div",{className:n.container},l.a.createElement(s.a,{label:"None",id:"margin-none",defaultValue:"Default Value",className:n.textField,helperText:"Some important text"}),l.a.createElement(s.a,{label:"Dense",id:"margin-dense",defaultValue:"Default Value",className:n.textField,helperText:"Some important text",margin:"dense"}),l.a.createElement(s.a,{label:"Normal",id:"margin-normal",defaultValue:"Default Value",className:n.textField,helperText:"Some important text",margin:"normal"}))})},2466:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\nconst TextFieldMargins = props => {\n  const { classes } = props;\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label="None"\n        id="margin-none"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n      />\n\n      <TextField\n        label="Dense"\n        id="margin-dense"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="dense"\n      />\n\n      <TextField\n        label="Normal"\n        id="margin-normal"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n      />\n    </div>\n  );\n};\n\nTextFieldMargins.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TextFieldMargins);\n'},2467:function(e,n,t){"use strict";t.r(n);var a=t(36),l=t(12),r=t(13),i=t(15),s=t(14),o=t(16),m=t(293),c=t(0),d=t.n(c),u=t(1827),p=t.n(u),h=t(2468),f=t.n(h),b=t(59),g=t(258),x=t.n(g),v=t(390),F=t.n(v),y=t(541),N=t.n(y),w=t(389),E=t.n(w);function C(e){var n=e.inputRef,t=Object(m.a)(e,["inputRef"]);return d.a.createElement(p.a,Object.assign({},t,{ref:function(e){n(e?e.inputElement:null)},mask:["(",/[1-9]/,/\d/,/\d/,")"," ",/\d/,/\d/,/\d/,"-",/\d/,/\d/,/\d/,/\d/],placeholderChar:"\u2000",showMask:!0}))}function T(e){var n=e.inputRef,t=e.onChange,a=Object(m.a)(e,["inputRef","onChange"]);return d.a.createElement(f.a,Object.assign({},a,{getInputRef:n,onValueChange:function(e){t({target:{value:e.value}})},thousandSeparator:!0,prefix:"$"}))}var I=function(e){function n(){var e,t;Object(l.a)(this,n);for(var r=arguments.length,o=new Array(r),m=0;m<r;m++)o[m]=arguments[m];return(t=Object(i.a)(this,(e=Object(s.a)(n)).call.apply(e,[this].concat(o)))).state={textmask:"(1\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000",numberformat:"1320"},t.handleChange=function(e){return function(n){t.setState(Object(a.a)({},e,n.target.value))}},t}return Object(o.a)(n,e),Object(r.a)(n,[{key:"render",value:function(){var e=this.props.classes,n=this.state,t=n.textmask,a=n.numberformat;return d.a.createElement("div",{className:e.container},d.a.createElement(E.a,{className:e.formControl},d.a.createElement(F.a,{htmlFor:"formatted-text-mask-input"},"react-text-mask"),d.a.createElement(x.a,{value:t,onChange:this.handleChange("textmask"),id:"formatted-text-mask-input",inputComponent:C})),d.a.createElement(N.a,{className:e.formControl,label:"react-number-format",value:a,onChange:this.handleChange("numberformat"),id:"formatted-numberformat-input",InputProps:{inputComponent:T}}))}}]),n}(d.a.Component);n.default=Object(b.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit}}})(I)},2470:function(e,n){e.exports="import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(1\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000',\n    numberformat: '1320',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n          <Input\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom}\n          />\n        </FormControl>\n        <TextField\n          className={classes.formControl}\n          label=\"react-number-format\"\n          value={numberformat}\n          onChange={this.handleChange('numberformat')}\n          id=\"formatted-numberformat-input\"\n          InputProps={{\n            inputComponent: NumberFormatCustom,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FormattedInputs);\n"},2608:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(4),i=t(1),s=t(59);n.default=Object(s.withStyles)(function(e){return{layoutRoot:{"& .description":{marginBottom:16}}}},{withTheme:!0})(function(e){var n=e.classes;return l.a.createElement(r.s,{classes:{root:n.layoutRoot},header:l.a.createElement("div",{className:"flex flex-1 items-center justify-between p-24"},l.a.createElement("div",{className:"flex flex-col"},l.a.createElement("div",{className:"flex items-center mb-16"},l.a.createElement(i.G,{className:"text-18",color:"action"},"home"),l.a.createElement(i.G,{className:"text-16",color:"action"},"chevron_right"),l.a.createElement(i.vb,{color:"textSecondary"},"Components"),l.a.createElement(i.G,{className:"text-16",color:"action"},"chevron_right"),l.a.createElement(i.vb,{color:"textSecondary"},"Material UI Elements")),l.a.createElement(i.vb,{variant:"h6"},"Text Fields")),l.a.createElement(i.c,{className:"normal-case",variant:"contained",component:"a",href:"https://material-ui-next.com/demos/text-fields",target:"_blank"},l.a.createElement(i.G,{className:"mr-4"},"link"),"Reference")),content:l.a.createElement("div",{className:"p-24 max-w-2xl mx-auto"},l.a.createElement(i.vb,{className:"text-44 mt-32 mb-8",component:"h1"},"Text Fields"),l.a.createElement(i.vb,{className:"description"},"Text fields let users enter and edit text."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("a",{href:"https://material.io/design/components/text-fields.html"},"Text fields")," allow users to enter text into a UI. They typically appear in forms and dialogs."),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"TextField"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"The ",l.a.createElement("code",null,"TextField")," wrapper component is a complete form control including a label, input and help text."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2442).default,raw:t(2443)})),l.a.createElement("blockquote",null,l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("strong",null,"Note:")," This version of the text field is no longer documented in the Material Design documentation.")),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Outlined"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField")," supports outlined styling."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2444).default,raw:t(2445)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Filled"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField")," supports filled styling."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2446).default,raw:t(2447)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Components"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField")," is composed of smaller components (",l.a.createElement("a",{href:"/api/form-control/"},l.a.createElement("code",null,"FormControl")),",",l.a.createElement("a",{href:"/api/input/"},l.a.createElement("code",null,"Input")),",",l.a.createElement("a",{href:"/api/filled-input/"},l.a.createElement("code",null,"FilledInput")),",",l.a.createElement("a",{href:"/api/input-label/"},l.a.createElement("code",null,"InputLabel")),",",l.a.createElement("a",{href:"/api/outlined-input/"},l.a.createElement("code",null,"OutlinedInput")),", and ",l.a.createElement("a",{href:"/api/form-helper-text/"},l.a.createElement("code",null,"FormHelperText")),") that you can leverage directly to significantly customize your form inputs."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"You might also have noticed that some native HTML input properties are missing from the ",l.a.createElement("code",null,"TextField")," component. This is on purpose. The component takes care of the most used properties, then it's up to the user to use the underlying component shown in the following demo. Still, you can use ",l.a.createElement("code",null,"inputProps")," (and ",l.a.createElement("code",null,"InputProps"),", ",l.a.createElement("code",null,"InputLabelProps")," properties) if you want to avoid some boilerplate."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2448).default,raw:t(2449)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Inputs"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2450).default,raw:t(2451)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Customized inputs"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"If you have been reading the ",l.a.createElement("a",{href:"/customization/overrides/"},"overrides documentation page"),"but you are not confident jumping in, here's an example of how you can change the main color of an Input."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("span",{role:"img","aria-label":"unicode-symbol"},"\u26a0")," While the material design specification encourages theming, these examples are off the beaten path."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2452).default,raw:t(2453)})),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"Customization does not stop at CSS, you can use composition to build custom components and give your app a unique feel. Below is an example using the ",l.a.createElement("a",{href:"/api/input-base/"},l.a.createElement("code",null,"InputBase"))," component, inspired by Google Maps."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2454).default,raw:t(2456)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Input Adornments"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("code",null,"Input")," allows the provision of ",l.a.createElement("code",null,"InputAdornment"),". These can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2457).default,raw:t(2458)})),l.a.createElement(i.vb,{className:"text-24 mt-32 mb-8",component:"h3"},"With icon"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"Icons can be specified as prepended or appended."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2459).default,raw:t(2460)})),l.a.createElement(i.vb,{className:"text-24 mt-32 mb-8",component:"h3"},"Filled Input Adornments"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2461).default,raw:t(2462)})),l.a.createElement(i.vb,{className:"text-24 mt-32 mb-8",component:"h3"},"Outlined Input Adornments"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2463).default,raw:t(2464)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Layout"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("code",null,"TextField"),", ",l.a.createElement("code",null,"FormControl")," allow the specification of ",l.a.createElement("code",null,"margin")," to alter the vertical spacing of inputs. Using",l.a.createElement("code",null,"none")," (default) will not apply margins to the ",l.a.createElement("code",null,"FormControl"),", whereas ",l.a.createElement("code",null,"dense")," and ",l.a.createElement("code",null,"normal")," will as well as alter other styles to meet the specification."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2465).default,raw:t(2466)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Limitations"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},'The input label "shrink" state isn\'t always correct. The input label is supposed to shrink as soon as the input is displaying something. In some circumstances, we can\'t determine the "shrink" state (number input, datetime input, Stripe input). You might notice an overlap.'),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement("img",{src:"/static/images/text-fields/shrink.png",alt:"shrink"})),l.a.createElement(i.vb,{className:"mb-16",component:"div"},'To workaround the issue, you can force the "shrink" state of the label.'),l.a.createElement(r.k,{component:"pre",className:"language-jsx"},"\n<TextField InputLabelProps={{ shrink: true }} />\n"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"or"),l.a.createElement(r.k,{component:"pre",className:"language-jsx"},"\n<InputLabel shrink>Count</InputLabel>\n"),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Formatted inputs"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"You can use third-party libraries to format an input. You have to provide a custom implementation of the ",l.a.createElement("code",null,"<input>")," element with the ",l.a.createElement("code",null,"inputComponent")," property. The provided input component should handle the ",l.a.createElement("code",null,"inputRef")," property. The property should be called with a value implementing the ",l.a.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"},l.a.createElement("code",null,"HTMLInputElement"))," interface."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"The following demo uses the ",l.a.createElement("a",{href:"https://github.com/text-mask/text-mask"},"react-text-mask")," and ",l.a.createElement("a",{href:"https://github.com/s-yadav/react-number-format"},"react-number-format")," libraries."),l.a.createElement(i.vb,{className:"mb-16",component:"div"},l.a.createElement(r.j,{className:"my-24",iframe:!1,component:t(2467).default,raw:t(2470)})),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Accessibility"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"In order for the text field to be accessible, ",l.a.createElement("strong",null,"the input should be linked to the label and the helper text"),". The underlying DOM nodes should have this structure."),l.a.createElement(r.k,{component:"pre",className:"language-jsx"},'\n<div className="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n'),l.a.createElement("ul",null,l.a.createElement("li",null,"If you are using the ",l.a.createElement("code",null,"TextField")," component, you just have to provide a unique ",l.a.createElement("code",null,"id"),"."),l.a.createElement("li",null,"If you are composing the component:")),l.a.createElement(r.k,{component:"pre",className:"language-jsx"},'\n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n'),l.a.createElement(i.vb,{className:"text-32 mt-32 mb-8",component:"h2"},"Complementary projects"),l.a.createElement(i.vb,{className:"mb-16",component:"div"},"For more advanced use cases you might be able to take advantage of:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("a",{href:"https://github.com/erikras/redux-form-material-ui"},"redux-form-material-ui")," A set of wrapper components to facilitate using Material UI with Redux Form."),l.a.createElement("li",null,l.a.createElement("a",{href:"https://github.com/stackworx/formik-material-ui"},"formik-material-ui")," Bindings for using Material-UI with formik."),l.a.createElement("li",null,l.a.createElement("a",{href:"https://github.com/Deadly0/final-form-material-ui"},"final-form-material-ui")," A set of wrapper components to facilitate using Material UI with Final Form."),l.a.createElement("li",null,l.a.createElement("a",{href:"https://github.com/vazco/uniforms/tree/master/packages/uniforms-material"},"uniforms-material")," Material-UI wrapper components for Uniforms, a set of React libraries for building forms.")))})})}}]);